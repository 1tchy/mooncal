package logics;

import org.junit.Test;

import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.Comparator;
import java.util.stream.Collectors;

import static org.junit.Assert.assertEquals;

public class SupportedTimeZoneTest {
    private static final LocalDateTime JUNE_DATE = LocalDateTime.of(2015, 6, 30, 0, 0, 0);
    private static final LocalDateTime DECEMBER_DATE = LocalDateTime.of(2015, 12, 30, 0, 0, 0);

    @Test
    public void supportedTimeZones() {
        assertEquals("\"Etc/GMT+12\", \"Pacific/Midway\", \"Pacific/Niue\", \"Pacific/Pago_Pago\", \"Pacific/Samoa\", \"US/Samoa\", \"Pacific/Honolulu\", \"Pacific/Johnston\", \"Pacific/Rarotonga\", \"Pacific/Tahiti\", \"US/Hawaii\", \"America/Adak\", \"America/Atka\", \"Pacific/Marquesas\", \"US/Aleutian\", \"Pacific/Gambier\", \"America/Anchorage\", \"America/Juneau\", \"America/Metlakatla\", \"America/Nome\", \"America/Sitka\", \"America/Yakutat\", \"US/Alaska\", \"Pacific/Pitcairn\", \"America/Dawson\", \"America/Ensenada\", \"America/Los_Angeles\", \"America/Santa_Isabel\", \"America/Tijuana\", \"America/Vancouver\", \"America/Whitehorse\", \"Canada/Pacific\", \"Canada/Yukon\", \"Mexico/BajaNorte\", \"PST8PDT\", \"US/Pacific\", \"America/Creston\", \"America/Dawson_Creek\", \"America/Fort_Nelson\", \"America/Hermosillo\", \"America/Phoenix\", \"US/Arizona\", \"America/Boise\", \"America/Cambridge_Bay\", \"America/Chihuahua\", \"America/Ciudad_Juarez\", \"America/Denver\", \"America/Edmonton\", \"America/Inuvik\", \"America/Mazatlan\", \"America/Ojinaga\", \"America/Shiprock\", \"America/Yellowknife\", \"Canada/Mountain\", \"MST7MDT\", \"Mexico/BajaSur\", \"Navajo\", \"US/Mountain\", \"America/Belize\", \"America/Costa_Rica\", \"America/El_Salvador\", \"America/Guatemala\", \"America/Managua\", \"America/Regina\", \"America/Swift_Current\", \"America/Tegucigalpa\", \"Canada/Saskatchewan\", \"Pacific/Galapagos\", \"America/Bahia_Banderas\", \"America/Chicago\", \"America/Indiana/Knox\", \"America/Indiana/Tell_City\", \"America/Knox_IN\", \"America/Matamoros\", \"America/Menominee\", \"America/Merida\", \"America/Mexico_City\", \"America/Monterrey\", \"America/North_Dakota/Beulah\", \"America/North_Dakota/Center\", \"America/North_Dakota/New_Salem\", \"America/Rainy_River\", \"America/Rankin_Inlet\", \"America/Resolute\", \"America/Winnipeg\", \"CST6CDT\", \"Canada/Central\", \"Mexico/General\", \"US/Central\", \"US/Indiana-Starke\", \"America/Atikokan\", \"America/Bogota\", \"America/Cancun\", \"America/Cayman\", \"America/Coral_Harbour\", \"America/Eirunepe\", \"America/Guayaquil\", \"America/Jamaica\", \"America/Lima\", \"America/Panama\", \"America/Porto_Acre\", \"America/Rio_Branco\", \"Brazil/Acre\", \"Chile/EasterIsland\", \"Jamaica\", \"Pacific/Easter\", \"America/Caracas\", \"America/Detroit\", \"America/Fort_Wayne\", \"America/Havana\", \"America/Indiana/Indianapolis\", \"America/Indiana/Marengo\", \"America/Indiana/Petersburg\", \"America/Indiana/Vevay\", \"America/Indiana/Vincennes\", \"America/Indiana/Winamac\", \"America/Indianapolis\", \"America/Iqaluit\", \"America/Kentucky/Louisville\", \"America/Kentucky/Monticello\", \"America/Louisville\", \"America/Montreal\", \"America/Nassau\", \"America/New_York\", \"America/Nipigon\", \"America/Pangnirtung\", \"America/Port-au-Prince\", \"America/Thunder_Bay\", \"America/Toronto\", \"Canada/Eastern\", \"Cuba\", \"EST5EDT\", \"US/East-Indiana\", \"US/Eastern\", \"US/Michigan\", \"America/Anguilla\", \"America/Antigua\", \"America/Aruba\", \"America/Barbados\", \"America/Blanc-Sablon\", \"America/Boa_Vista\", \"America/Curacao\", \"America/Dominica\", \"America/Grand_Turk\", \"America/Grenada\", \"America/Guadeloupe\", \"America/Guyana\", \"America/Kralendijk\", \"America/La_Paz\", \"America/Lower_Princes\", \"America/Manaus\", \"America/Marigot\", \"America/Martinique\", \"America/Montserrat\", \"America/Port_of_Spain\", \"America/Porto_Velho\", \"America/Puerto_Rico\", \"America/Santo_Domingo\", \"America/St_Barthelemy\", \"America/St_Kitts\", \"America/St_Lucia\", \"America/St_Thomas\", \"America/St_Vincent\", \"America/Tortola\", \"America/Virgin\", \"Brazil/West\", \"America/Asuncion\", \"America/Campo_Grande\", \"America/Cuiaba\", \"America/Glace_Bay\", \"America/Goose_Bay\", \"America/Halifax\", \"America/Moncton\", \"America/Thule\", \"Atlantic/Bermuda\", \"Canada/Atlantic\", \"America/Araguaina\", \"America/Argentina/Buenos_Aires\", \"America/Argentina/Catamarca\", \"America/Argentina/ComodRivadavia\", \"America/Argentina/Cordoba\", \"America/Argentina/Jujuy\", \"America/Argentina/La_Rioja\", \"America/Argentina/Mendoza\", \"America/Argentina/Rio_Gallegos\", \"America/Argentina/Salta\", \"America/Argentina/San_Juan\", \"America/Argentina/San_Luis\", \"America/Argentina/Tucuman\", \"America/Argentina/Ushuaia\", \"America/Bahia\", \"America/Belem\", \"America/Buenos_Aires\", \"America/Catamarca\", \"America/Cayenne\", \"America/Cordoba\", \"America/Fortaleza\", \"America/Jujuy\", \"America/Maceio\", \"America/Mendoza\", \"America/Montevideo\", \"America/Paramaribo\", \"America/Punta_Arenas\", \"America/Recife\", \"America/Rosario\", \"America/Santarem\", \"America/Santiago\", \"America/St_Johns\", \"Antarctica/Palmer\", \"Antarctica/Rothera\", \"Atlantic/Stanley\", \"Canada/Newfoundland\", \"Chile/Continental\", \"America/Godthab\", \"America/Miquelon\", \"America/Nuuk\", \"America/Sao_Paulo\", \"Brazil/East\", \"America/Noronha\", \"Atlantic/South_Georgia\", \"Brazil/DeNoronha\", \"Atlantic/Cape_Verde\", \"America/Scoresbysund\", \"Atlantic/Azores\", \"Africa/Abidjan\", \"Africa/Accra\", \"Africa/Bamako\", \"Africa/Banjul\", \"Africa/Bissau\", \"Africa/Casablanca\", \"Africa/Conakry\", \"Africa/Dakar\", \"Africa/El_Aaiun\", \"Africa/Freetown\", \"Africa/Lome\", \"Africa/Monrovia\", \"Africa/Nouakchott\", \"Africa/Ouagadougou\", \"Africa/Sao_Tome\", \"Africa/Timbuktu\", \"America/Danmarkshavn\", \"Atlantic/Reykjavik\", \"Atlantic/St_Helena\", \"GMT\", \"GMT0\", \"Greenwich\", \"Iceland\", \"UCT\", \"UTC\", \"Universal\", \"Zulu\", \"Atlantic/Canary\", \"Atlantic/Faeroe\", \"Atlantic/Faroe\", \"Atlantic/Madeira\", \"Eire\", \"Europe/Belfast\", \"Europe/Dublin\", \"Europe/Guernsey\", \"Europe/Isle_of_Man\", \"Europe/Jersey\", \"Europe/Lisbon\", \"Europe/London\", \"GB\", \"GB-Eire\", \"Portugal\", \"WET\", \"Africa/Algiers\", \"Africa/Bangui\", \"Africa/Brazzaville\", \"Africa/Douala\", \"Africa/Kinshasa\", \"Africa/Lagos\", \"Africa/Libreville\", \"Africa/Luanda\", \"Africa/Malabo\", \"Africa/Ndjamena\", \"Africa/Niamey\", \"Africa/Porto-Novo\", \"Africa/Tunis\", \"Antarctica/Troll\", \"Africa/Ceuta\", \"Africa/Windhoek\", \"Arctic/Longyearbyen\", \"Atlantic/Jan_Mayen\", \"CET\", \"Europe/Amsterdam\", \"Europe/Andorra\", \"Europe/Belgrade\", \"Europe/Berlin\", \"Europe/Bratislava\", \"Europe/Brussels\", \"Europe/Budapest\", \"Europe/Busingen\", \"Europe/Copenhagen\", \"Europe/Gibraltar\", \"Europe/Ljubljana\", \"Europe/Luxembourg\", \"Europe/Madrid\", \"Europe/Malta\", \"Europe/Monaco\", \"Europe/Oslo\", \"Europe/Paris\", \"Europe/Podgorica\", \"Europe/Prague\", \"Europe/Rome\", \"Europe/San_Marino\", \"Europe/Sarajevo\", \"Europe/Skopje\", \"Europe/Stockholm\", \"Europe/Tirane\", \"Europe/Vaduz\", \"Europe/Vatican\", \"Europe/Vienna\", \"Europe/Warsaw\", \"Europe/Zagreb\", \"Europe/Zurich\", \"MET\", \"Poland\", \"Africa/Blantyre\", \"Africa/Bujumbura\", \"Africa/Cairo\", \"Africa/Gaborone\", \"Africa/Harare\", \"Africa/Johannesburg\", \"Africa/Kigali\", \"Africa/Lubumbashi\", \"Africa/Lusaka\", \"Africa/Maputo\", \"Africa/Maseru\", \"Africa/Mbabane\", \"Africa/Tripoli\", \"Egypt\", \"Europe/Kaliningrad\", \"Libya\", \"Asia/Amman\", \"Asia/Beirut\", \"Asia/Damascus\", \"Asia/Famagusta\", \"Asia/Gaza\", \"Asia/Hebron\", \"Asia/Istanbul\", \"Asia/Jerusalem\", \"Asia/Nicosia\", \"Asia/Tel_Aviv\", \"EET\", \"Europe/Athens\", \"Europe/Bucharest\", \"Europe/Chisinau\", \"Europe/Helsinki\", \"Europe/Istanbul\", \"Europe/Kiev\", \"Europe/Kyiv\", \"Europe/Mariehamn\", \"Europe/Nicosia\", \"Europe/Riga\", \"Europe/Sofia\", \"Europe/Tallinn\", \"Europe/Tiraspol\", \"Europe/Uzhgorod\", \"Europe/Vilnius\", \"Europe/Zaporozhye\", \"Israel\", \"Turkey\", \"Africa/Addis_Ababa\", \"Africa/Asmara\", \"Africa/Asmera\", \"Africa/Dar_es_Salaam\", \"Africa/Djibouti\", \"Africa/Juba\", \"Africa/Kampala\", \"Africa/Khartoum\", \"Africa/Mogadishu\", \"Africa/Nairobi\", \"Antarctica/Syowa\", \"Asia/Aden\", \"Asia/Baghdad\", \"Asia/Bahrain\", \"Asia/Kuwait\", \"Asia/Qatar\", \"Asia/Riyadh\", \"Europe/Astrakhan\", \"Europe/Kirov\", \"Europe/Minsk\", \"Europe/Moscow\", \"Europe/Saratov\", \"Europe/Simferopol\", \"Europe/Ulyanovsk\", \"Europe/Volgograd\", \"Indian/Antananarivo\", \"Indian/Comoro\", \"Indian/Mayotte\", \"W-SU\", \"Asia/Dubai\", \"Asia/Muscat\", \"Asia/Tbilisi\", \"Asia/Tehran\", \"Asia/Yerevan\", \"Europe/Samara\", \"Indian/Mahe\", \"Indian/Mauritius\", \"Indian/Reunion\", \"Iran\", \"Asia/Baku\", \"Asia/Kabul\", \"Antarctica/Mawson\", \"Asia/Aqtau\", \"Asia/Aqtobe\", \"Asia/Ashgabat\", \"Asia/Ashkhabad\", \"Asia/Atyrau\", \"Asia/Dushanbe\", \"Asia/Karachi\", \"Asia/Oral\", \"Asia/Samarkand\", \"Asia/Tashkent\", \"Asia/Yekaterinburg\", \"Indian/Kerguelen\", \"Indian/Maldives\", \"Asia/Calcutta\", \"Asia/Colombo\", \"Asia/Kolkata\", \"Asia/Kathmandu\", \"Asia/Katmandu\", \"Antarctica/Vostok\", \"Asia/Almaty\", \"Asia/Barnaul\", \"Asia/Bishkek\", \"Asia/Dacca\", \"Asia/Dhaka\", \"Asia/Kashgar\", \"Asia/Novosibirsk\", \"Asia/Omsk\", \"Asia/Qostanay\", \"Asia/Qyzylorda\", \"Asia/Thimbu\", \"Asia/Thimphu\", \"Asia/Tomsk\", \"Asia/Urumqi\", \"Indian/Chagos\", \"Asia/Rangoon\", \"Asia/Yangon\", \"Indian/Cocos\", \"Antarctica/Davis\", \"Asia/Bangkok\", \"Asia/Ho_Chi_Minh\", \"Asia/Jakarta\", \"Asia/Krasnoyarsk\", \"Asia/Novokuznetsk\", \"Asia/Phnom_Penh\", \"Asia/Pontianak\", \"Asia/Saigon\", \"Asia/Vientiane\", \"Indian/Christmas\", \"Asia/Hovd\", \"Antarctica/Casey\", \"Asia/Brunei\", \"Asia/Chita\", \"Asia/Chongqing\", \"Asia/Chungking\", \"Asia/Harbin\", \"Asia/Hong_Kong\", \"Asia/Irkutsk\", \"Asia/Kuala_Lumpur\", \"Asia/Kuching\", \"Asia/Macao\", \"Asia/Macau\", \"Asia/Makassar\", \"Asia/Manila\", \"Asia/Shanghai\", \"Asia/Singapore\", \"Asia/Taipei\", \"Asia/Ujung_Pandang\", \"Australia/Perth\", \"Australia/West\", \"Hongkong\", \"PRC\", \"Singapore\", \"Asia/Choibalsan\", \"Asia/Ulaanbaatar\", \"Asia/Ulan_Bator\", \"Asia/Pyongyang\", \"Australia/Eucla\", \"Asia/Dili\", \"Asia/Jayapura\", \"Asia/Khandyga\", \"Asia/Seoul\", \"Asia/Tokyo\", \"Asia/Yakutsk\", \"Japan\", \"Pacific/Palau\", \"ROK\", \"Australia/Darwin\", \"Australia/North\", \"Antarctica/DumontDUrville\", \"Asia/Magadan\", \"Asia/Sakhalin\", \"Asia/Ust-Nera\", \"Asia/Vladivostok\", \"Australia/Adelaide\", \"Australia/Brisbane\", \"Australia/Broken_Hill\", \"Australia/Lindeman\", \"Australia/Queensland\", \"Australia/South\", \"Australia/Yancowinna\", \"Pacific/Chuuk\", \"Pacific/Guam\", \"Pacific/Port_Moresby\", \"Pacific/Saipan\", \"Pacific/Truk\", \"Pacific/Yap\", \"Antarctica/Macquarie\", \"Australia/ACT\", \"Australia/Canberra\", \"Australia/Currie\", \"Australia/Hobart\", \"Australia/Melbourne\", \"Australia/NSW\", \"Australia/Sydney\", \"Australia/Tasmania\", \"Australia/Victoria\", \"Australia/LHI\", \"Australia/Lord_Howe\", \"Asia/Srednekolymsk\", \"Pacific/Bougainville\", \"Pacific/Efate\", \"Pacific/Guadalcanal\", \"Pacific/Kosrae\", \"Pacific/Noumea\", \"Pacific/Pohnpei\", \"Pacific/Ponape\", \"Pacific/Norfolk\", \"Asia/Anadyr\", \"Asia/Kamchatka\", \"Kwajalein\", \"Pacific/Funafuti\", \"Pacific/Kwajalein\", \"Pacific/Majuro\", \"Pacific/Nauru\", \"Pacific/Tarawa\", \"Pacific/Wake\", \"Pacific/Wallis\", \"Antarctica/McMurdo\", \"Antarctica/South_Pole\", \"NZ\", \"Pacific/Auckland\", \"Pacific/Fiji\", \"Pacific/Enderbury\", \"Pacific/Fakaofo\", \"Pacific/Kanton\", \"Pacific/Tongatapu\", \"NZ-CHAT\", \"Pacific/Chatham\", \"Pacific/Apia\", \"Pacific/Kiritimati\"",
                "\"" + ZoneId.getAvailableZoneIds().stream()
                        .map(ZoneInfo::new)
                        .collect(Collectors.groupingBy(ZoneInfo::zoneOffsets))
                        .values().stream()
                        .flatMap(zoneInfosOfZonesAtSameOffset -> {
                            if (zoneInfosOfZonesAtSameOffset.size() == 1) {
                                return zoneInfosOfZonesAtSameOffset.stream();
                            }
                            return zoneInfosOfZonesAtSameOffset.stream()
                                    .filter(zoneInfo -> !zoneInfo.zoneId.startsWith("SystemV/") && !zoneInfo.zoneId.startsWith("Etc/"));
                        })
                        .sorted(Comparator.comparing(ZoneInfo::averageOffset).thenComparing(ZoneInfo::zoneId))
                        .map(ZoneInfo::zoneId)
                        .collect(Collectors.joining("\", \"")) + "\"");
    }

    private record ZoneInfo(int juneOffset, int decemberOffset, String zoneId) {
        public ZoneInfo(String zoneId) {
            this(
                    ZonedDateTime.of(JUNE_DATE, ZoneId.of(zoneId)).getOffset().getTotalSeconds() / 60,
                    ZonedDateTime.of(DECEMBER_DATE, ZoneId.of(zoneId)).getOffset().getTotalSeconds() / 60,
                    zoneId
            );
        }

        public String zoneOffsets() {
            return juneOffset + "/" + decemberOffset;
        }

        public int averageOffset() {
            return (juneOffset + decemberOffset) / 2;
        }
    }
}
